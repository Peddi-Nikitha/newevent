"use strict";(()=>{var e={};e.id=569,e.ids=[569],e.modules={53524:e=>{e.exports=require("@prisma/client")},67096:e=>{e.exports=require("bcrypt")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},26092:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>f,patchFetch:()=>v,requestAsyncStorage:()=>g,routeModule:()=>m,serverHooks:()=>x,staticGenerationAsyncStorage:()=>h});var s={};t.r(s),t.d(s,{POST:()=>c});var a=t(49303),i=t(88716),n=t(60670),o=t(87070),u=t(53524),l=t(67096),p=t.n(l);let d=new u.PrismaClient;async function c(e){try{let{fullName:r,email:t,password:s,role:a}=await e.json();if(!r||!t||!s)return o.NextResponse.json({message:"All fields are required"},{status:400});if(s.length<8)return o.NextResponse.json({message:"Password must be at least 8 characters long"},{status:400});if(await d.user.findUnique({where:{email:t}}))return o.NextResponse.json({message:"Email is already registered"},{status:400});let i=await p().hash(s,10),n=await d.user.create({data:{fullname:r,email:t,passwordhash:i,role:a||"CUSTOMER"}});return o.NextResponse.json({message:"User registered successfully",user:{id:n.id,fullName:n.fullname,email:n.email,role:n.role}})}catch(e){return console.error("Registration error:",e),o.NextResponse.json({message:"Failed to register user"},{status:500})}}let m=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/register/route",pathname:"/api/register",filename:"route",bundlePath:"app/api/register/route"},resolvedPagePath:"C:\\Users\\S\\Downloads\\eveplan\\eveplan\\app\\api\\register\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:g,staticGenerationAsyncStorage:h,serverHooks:x}=m,f="/api/register/route";function v(){return(0,n.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:h})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[276,972],()=>t(26092));module.exports=s})();